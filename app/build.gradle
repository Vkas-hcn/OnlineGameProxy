plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'xml-class-guard'

}
//以下均为非必须
xmlClassGuard {
    /*
     * 是否查找约束布局的constraint_referenced_ids属性的值，并添加到AabResGuard的白名单中，
     * 是的话，要求你在XmlClassGuard前依赖AabResGuard插件，默认false
     */
    findAabConstraintReferencedIds = false

    /*
     * 是否查找约束布局的constraint_referenced_ids属性的值，并添加到AndResGuard的白名单中，
     * 是的话，要求你在XmlClassGuard前依赖AndResGuard插件，默认false
     */
    findAndConstraintReferencedIds = false
    //用于增量混淆的 mapping 文件
    mappingFile = file("xml-class-mapping.txt")
    //更改manifest文件的package属性，即包名
    packageChange = ["op.as": "op.asd"]
    //移动目录
    moveDir = ["op.as": "op.asd"]
}
android {
    compileSdk rootProject.ext.android.compileSdk

    defaultConfig {
        applicationId "com.vkas.onlinegameproxy"
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(':shadowsocks')
    //androidx项目xui
    implementation 'com.github.xuexiangjys:XUI:1.2.0'
    implementation 'com.github.xuexiangjys.XUtil:xutil-core:2.0.0'
    implementation 'com.tencent:mmkv:1.2.14'
    api 'cat.ereza:customactivityoncrash:2.3.0'
    implementation rootProject.ext.dependencies.coreKtx
    implementation rootProject.ext.dependencies.fragmentKtx
    implementation rootProject.ext.dependencies.lifeCycleKtx
    implementation rootProject.ext.dependencies.liveDataKtx
    implementation rootProject.ext.dependencies.viewModelKtx
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.material
    implementation rootProject.ext.dependencies.constraintlayout
    implementation rootProject.ext.dependencies.coroutines
    implementation rootProject.ext.dependencies.androidUtilCode
    implementation rootProject.ext.dependencies.lottie
    implementation platform(rootProject.ext.dependencies.firebaseBom)
    implementation rootProject.ext.dependencies.firebaseConfigKtx
    implementation rootProject.ext.dependencies.gmsAds
    implementation rootProject.ext.dependencies.gson
    implementation rootProject.ext.dependencies.rxpermissions
    implementation rootProject.ext.dependencies.glide
    implementation rootProject.ext.dependencies.transformations
    implementation rootProject.ext.dependencies.moshi
    kapt rootProject.ext.dependencies.moshiCodegen
    implementation "com.android.installreferrer:installreferrer:2.2"
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0' // 要求OkHttp4以上

    //Apollo依赖RxAndroid2,请使用最新的版本
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

    //Apollo的核心库
    implementation "com.github.lsxiao.Apollo:core:1.0.2"

    //Apollo的编译时注解处理器
    annotationProcessor "com.github.lsxiao.Apollo:processor:1.0.2"

    //如果你使用的是kotlin,请使用kapt
    kapt "com.github.lsxiao.Apollo:processor:1.0.2"
}